#!/usr/bin/env node
// -*- mode: javascript -*-
/*
  how to use it
  git-your-emacs command arg0 arg1 ...
  git-your-emacs update -- update all 
 */
var fs = require("fs");
var path = require("path");
var util = require("util")
var path = require("path");
var colors = require("colors");
var exec = require('child_process').exec;

function changeDirectory() {
  return "cd " + __dirname + " && ";
}

function submodules(cb) {
  exec(changeDirectory() + "git submodule", function(err, stdout) {
    if (err != null) {
      throw new Error("cannot enumerate submodules");
    }
    else {
      // ' hash name branch'
      var submodules = [];
      var splitted_stdout = stdout.split("\n");
      for (var i = 0; i < splitted_stdout.length; i++) {
        var line = splitted_stdout[i];
        var result = line.match(/^\s[0-9a-z]* (\S*)/);
        if (result && result.length > 1) {
          submodules.push(result[1]);
        }
      }
      cb(submodules);
    }
  });
};

function submodulesMain() {
  submodules(function(modules) {
    console.log(modules.join("\n"));
  });
};

function updateMain() {
  console.log("updating git-your-emacs");
  exec(changeDirectory() + "git pull", function(err, stdout) {
    if (err != null)
      throw new Error("cannot update git");
    else
      console.log("done");
  });
};

function emacsInitMain() {
  console.log("\n\
;; auto-generated by git-your-emacs\n\
(add-to-list 'load-path \"" + __dirname + "./emacs.d\")\n\
");
};

function addModuleMain() {
  var submodule = ARGV._[1];
  console.log("adding " + submodule);
  exec(changeDirectory() + "git submodule add " + submodule, function(err, stdout) {
    if (err != null) {
      throw err;
    }
    else {
      console.log("done");
    }
  });
};

var COMMANDS = {
  "update": {
    callback: updateMain,
    description: "update all submodules"
  },
  "emacs-init": {
    callback: emacsInitMain,
    description: "generate emacs lisp to load emacs files"
  },
  "add-module": {
    callback: addModuleMain,
    description: "add a new git submodule to git-your-emacs"
  },
  "submodules": {
    callback: submodulesMain,
    description: "list submodules"
  }
};

function main() {
  try {
    if (ARGV._.length == 0) {
      throw new Error("no command is specified");
    }
    else {
      var command = ARGV._[0];
      for (var key in COMMANDS) {
        if (command == key) {
          COMMANDS[key].callback();
          return;
        }
      }
      throw new Error(command + " is not supported");
    }
  }
  catch (e) {
    console.log(e.toString().red);
    console.log(optimist.help());
  }
};

// arguments
var optimist = require("optimist");
(function() {
  var command_usage = "Usage: $0 command [options]";
  for (var key in COMMANDS) {
    command_usage += "\n  " + key + ": " + COMMANDS[key].description;
  }
  optimist.usage(command_usage);
})();
var ARGV = optimist.argv;
main();
